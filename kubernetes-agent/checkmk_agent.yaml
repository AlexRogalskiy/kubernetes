# This is purely for testing purposes. Do not use a production cluster
---
apiVersion: v1
kind: Namespace
metadata:
  name: checkmk-monitoring-streaming
---
apiVersion: v1
kind: Secret
metadata:
  name: checkmk-secret
  namespace: checkmk-monitoring-streaming
data:
  # Secret must be a base64 decrypt string use echo -n "STRING" | base64 do get it
  cmk-key: |
    LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZB
    QVNDQktnd2dnU2tBZ0VBQW9JQkFRRHQrci8xeFdXTTZiODIKTHlRRGhZaGNXR255akNya3E3SlBx
    d3prbnBLdXR2MzFwTUZPZzhwNnltdzFOQlYrUExrdDZHbVJGQmowSEFkRApiUmIyR2MrSW85aGZM
    WnhiVVFScTRsbVBRem0rNUVKSnVtZUpyMkFjaElBeGF4b1RVWlduWkdRMjFNbHVkTjlEClNEY1Vv
    aEdGY29zd2Q2ZWtja1RHSXVuaFpVdUF1NDFSQzBkRldFcVF3VkRuTUoyb1M3U2NxcDVGMGxSREZm
    VVQKZlQvbXFBTit2NGhCZjU3Y3BYVmdCditET0ZrQ2cwbGNxT1ZnUmRSVmtpZlhvL2hraHF4dkJw
    V3hSSllwWTJVRApQT0poL3F5ODNVWERiaGYxdnVLaFNwS2JZR2tWZFdtbi9MdDJmT3VrdW9Sa0M1
    SUYvWE5mOU1zWGdSTG90K3AzCktBSE1YM2UxQWdNQkFBRUNnZ0VCQUxvRVJXWDd2U3dQVGZveGtP
    bjd4NkcvTGxsN3ZNOXZjZnFhRG9McGZHaDYKK3ptMlphOVVqc0c2Vmlpa0pLUy9IRlJKRmJOa1RU
    a0thNWNGdjJ2d3N1cndmMkd1U2tpS3BIUlRwNE8zSFgwYgorTUNlcHUzVm1yL1B4bEJha2xCRmRr
    QVkxY2lTUFQxTXQzTmxFRURkaWVxUXBVSG1WYkRSN1BZZk5rZUxvUi9tCmVHYm1kb3RLNmZSSklj
    SnpVd2dtakkwYUIxQjZOYjNnSlluUm1SWXlKTlBjZE5acTR5ZDYxTmpBK0FQeWI1eGoKWlhvREpn
    d2c1NGNaQkphWS94cktiZ21YRGxoS3BsOXVwcnRUZ2ZBU3RiMkYwWnRaMWhPMGk2cWtXYzNtMGZy
    TQpUS0lYYVQzcmZ4RmVoOHBQOEs3QlB2R0NMNElsN0JMb0ZlNVV2Rjd4L0VVQ2dZRUErUFNtQnpF
    M2FuekdiemRzCkFQUjJuMVpia2pKcUd1TGwydlpEQlViekpVNEllMVdhcmcyUXBibWowdUhUeEdI
    NUZvbkNWZGJxVXU0R09ialcKN0xSL1FCZWNJZXRMN0tqQ05SS2ZLcE81MjRhdHc3Ti9Xbjg1Mm9k
    ZWQvK2QwMnJQZjkyQ0lIRFVZRGJSZjg1cgpaenJ0UVFnSHpHS0g0bm11dU5kU0JOUG9CdmNDZ1lF
    QTlMYVg5MklZVXRZbTlVZEIrVDNGanNyVXZBNHp4cE5xCm0rMEc5aVZmOTdPcUlQaTFlNXFZRTBW
    NExLYWVMV3JiclI0SEkySFg4UXVzSFdDWDVTbjdaVG1oamJLcW9vdTAKSkRZUmVjS3pvVFgzeUNP
    eDU3QWdURU91SDlncmpNU29jZHR6STBpWmNWTGk4TGlDTS9jRDlHSGlobituaENLcwo1ZmpnSjMv
    dTc3TUNnWUI0MVQyMFpmWHdzSWtidC9tcTZQeWVUNnI0WlpITVpPNk5mVk9BUHpTS21icFNLblYr
    CkgwVml1cHpDSVN2SXVJak9vS1I3UjJuS1FJOHkrdjBPUEhrNjRYcTlsOWZ0RU9mYUhLUzJaS2Nq
    M3RWK0ZDUXYKQjJ0TUhzSUNXa1gvTkd0c00xWVNhdEVadGVHdk44QTNoWWxjTkFxYzhBSG1NWXRW
    V2VVTVJOSHNkd0tCZ0FUcQo2bkRoT3NYblljOEtDSXhlcm1xcExzODhwZE8yd0t5emZiRlNuUFFZ
    V3pIZ2JaMDNSUmtXQzAweVovbFhyV1IwCk53YUIvOW5yTnlFOEFMRnRQNDBRTkd2cGpENUorbXZE
    M21RSkFwMFp2WW43RmFjblJlN2lhVXhnaHJlRWVESVoKaTkzSXByUzlTcXcxdVFBY1Zhc0NrSS9O
    WHV0cjJ2ZWdJYmtKZkI2N0FvR0JBUGVVbjY0cmprV05RdW9JVnBzVwpFeDNMS05MOW00TVlWLzg2
    eTg1UW1iYlZYdUhyZDI0bVRMMDN5RFk4MmxnV1Z0TjRuRUNOano2cFR5TzViK2dFCkg3alVGVmln
    MW1sSlFVSTQ5Q0ZkYzdIcjgxWEJmNElwUmJhSGVpUkFjS2VRbUl6VGZpU3pYRFRMVjUvR0NXSXAK
    QlhJcCt2YVN6eWh6WmRLK05FNnlYYVVwCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0=
  cmk-keypass: Y2hlY2ttaw==
  cmk-cert: |
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVFakNDQXZxZ0F3SUJBZ0lVUGdZRzlBd2JS
    WnN2cHBNVjFvajgvTHE4MjRJd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2dhY3hDekFKQmdOVkJBWVRB
    a1JGTVE4d0RRWURWUVFJREFaQ1lYbGxjbTR4RVRBUEJnTlZCQWNNQ0UxMQpaVzVqYUdWdU1SVXdF
    d1lEVlFRS0RBeDBjbWxpWlRJNUlFZHRZa2d4Q3pBSkJnTlZCQXNNQWtsVU1TOHdMUVlKCktvWklo
    dmNOQVFrQkZpQjNaV0p0WVhOMFpYSkFZMjFyTGpFd0xqSXdNQzR6TGpJd0xtNXBjQzVwYnpFZk1C
    MEcKQTFVRUF3d1dZMjFyTGpFd0xqSXdNQzR6TGpJd0xtNXBjQzVwYnpBZUZ3MHlNVEE1TVRReE1U
    RTJNREJhRncweQpOREE1TVRNeE1URTJNREJhTUlHbk1Rc3dDUVlEVlFRR0V3SkVSVEVQTUEwR0Ex
    VUVDQXdHUW1GNVpYSnVNUkV3CkR3WURWUVFIREFoTmRXVnVZMmhsYmpFVk1CTUdBMVVFQ2d3TWRI
    SnBZbVV5T1NCSGJXSklNUXN3Q1FZRFZRUUwKREFKSlZERXZNQzBHQ1NxR1NJYjNEUUVKQVJZZ2Qy
    VmliV0Z6ZEdWeVFHTnRheTR4TUM0eU1EQXVNeTR5TUM1dQphWEF1YVc4eEh6QWRCZ05WQkFNTUZt
    TnRheTR4TUM0eU1EQXVNeTR5TUM1dWFYQXVhVzh3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0
    SUJEd0F3Z2dFS0FvSUJBUUR0K3IvMXhXV002YjgyTHlRRGhZaGNXR255akNya3E3SlAKcXd6a25w
    S3V0djMxcE1GT2c4cDZ5bXcxTkJWK1BMa3Q2R21SRkJqMEhBZERiUmIyR2MrSW85aGZMWnhiVVFS
    cQo0bG1QUXptKzVFSkp1bWVKcjJBY2hJQXhheG9UVVpXblpHUTIxTWx1ZE45RFNEY1VvaEdGY29z
    d2Q2ZWtja1RHCkl1bmhaVXVBdTQxUkMwZEZXRXFRd1ZEbk1KMm9TN1NjcXA1RjBsUkRGZlVUZlQv
    bXFBTit2NGhCZjU3Y3BYVmcKQnYrRE9Ga0NnMGxjcU9WZ1JkUlZraWZYby9oa2hxeHZCcFd4UkpZ
    cFkyVURQT0poL3F5ODNVWERiaGYxdnVLaApTcEtiWUdrVmRXbW4vTHQyZk91a3VvUmtDNUlGL1hO
    ZjlNc1hnUkxvdCtwM0tBSE1YM2UxQWdNQkFBR2pOREF5Ck1EQUdBMVVkRVFRcE1DZUNHQ291WTIx
    ckxqRXdMakl3TUM0ekxqSXdMbTVwY0M1cGI0SUxNVEF1TWpBd0xqTXUKTWpBd0RRWUpLb1pJaHZj
    TkFRRUxCUUFEZ2dFQkFKSG01S1ozc09va095bFR1cE95enlBZU9TbEJWV0t6MUp0RApnbmJGUmkr
    ZExFQzY2M2h1UE1BQTk1NjQwRGNFKzRkK2NLbVd2Q0lCNmdTanpHNVk5WGU4OHcwM3l5ZGIvWHNM
    CkdVYVVML20rNFA5Vnk2dm1DQ2I2c2xNRC9Kb0luSGtpNHZFaWswQ2dCaFExV1R0Um90UDZRMStH
    Y21RalhteDYKTXRNdjlWcU9DM0pNejFoV093dkZ6OVJ4Rk5CYjNNWmhGUWV1azJxUlBqV1hCSEdY
    cURIdDRWbndEbEFFaG5pRgpWaGVtYjJ3djNKY1ZIcXdaaEYrTTNNYnVMVTJUSE9ObXhaKzQ5T1I5
    ME9yMmhkQlZQQlRsM1FwaWYxWG9FSnhlClVQVmllUlZ5cnV6WTVzV3RQcTVRaGE2Vk5QbTQ3eEd3
    MXZVcU1vOGFyVmQ5bXpGWUFnND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
---
apiVersion: v1
kind: Service
metadata:
  name: checkmk-internal
  namespace: checkmk-monitoring-streaming
  labels:
    app: checkmk-cluster-agent
spec:
  ports:
  - name: api
    port: 80
    targetPort: 10050
    protocol: TCP
  selector:
    app: checkmk-cluster-agent
---
apiVersion: v1
kind: Service
metadata:
  name: checkmk-external
  namespace: checkmk-monitoring-streaming
  labels:
    app: checkmk-cluster-agent
spec:
  type: NodePort
  ports:
  - name: api
    port: 30036
    nodePort: 30036
    targetPort: 10050
    protocol: TCP
  selector:
    app: checkmk-cluster-agent
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkmk-cluster-agent
  namespace: checkmk-monitoring-streaming
  labels:
    app: checkmk-cluster-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: checkmk-cluster-agent
  template:
    metadata:
      labels:
        app: checkmk-cluster-agent
    spec:
      containers:
      - name: checkmk-cluster-agent
        image: wontektribe29/cluster-stream:0.33
        imagePullPolicy: Always
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: CMK_KEYPASS
            valueFrom:
              secretKeyRef:
                name: checkmk-secret
                key: cmk-keypass
        volumeMounts:
          - name: cmk-key
            mountPath: /etc/ca-certificates/cmk-key.pam
            subPath: cmk-key.pam
          - name: cmk-cert
            mountPath: /etc/ca-certificates/cmk-cert.pam
            subPath: cmk-cert.pam
        livenessProbe:
          httpGet:
            path: /
            port: api
            httpHeaders:
            - name: status
              value: available
            scheme: HTTPS
          initialDelaySeconds: 3
          periodSeconds: 3  # TODO: check at end of implementation
                            # how often this is really needed.
        command: ["python3"]
        # For http, simply remove all arguments after "/app_server/api.py"
        # NOTE: also modify scheme in liveness probe
        args: ["/app_server/api.py", "--ssl-keyfile", "/etc/ca-certificates/cmk-key.pam", "--ssl-keyfile-password", "$(CMK_KEYPASS)", "--ssl-certfile", "/etc/ca-certificates/cmk-cert.pam", "--secure-protocol"]
#        args: ["/app_server/api.py"]
        ports:
          - containerPort: 10050
            name: api
            protocol: TCP
        resources:
          limits:
            cpu: 300m
            memory: 2000Mi
          requests:
            cpu: 150m
            memory: 200Mi
      volumes:
        - name: cmk-key
          secret:
            secretName: checkmk-secret
            items:
              - key: cmk-key
                path: cmk-key.pam
        - name: cmk-cert
          secret:
            secretName: checkmk-secret
            items:
              - key: cmk-cert
                path: cmk-cert.pam
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: checkmk-worker-agent
  name: cadvisor
  namespace: checkmk-monitoring-streaming
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  labels:
    app: checkmk-worker-agent
  name: cadvisor
spec:
  allowedHostPaths:
  - pathPrefix: /
  - pathPrefix: /var/run
  - pathPrefix: /sys
  - pathPrefix: /var/lib/docker
  - pathPrefix: /dev/disk
  fsGroup:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: checkmk-worker-agent
  name: cadvisor
rules:
- apiGroups:
  - policy
  resourceNames:
  - cadvisor
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: checkmk-worker-agent
  name: cadvisor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cadvisor
subjects:
- kind: ServiceAccount
  name: cadvisor
  namespace: checkmk-monitoring-streaming
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: docker/default
  labels:
    app: checkmk-worker-agent
  name: checkmk-worker-agent
  namespace: checkmk-monitoring-streaming
spec:
  selector:
    matchLabels:
      app: checkmk-worker-agent
      name: checkmk-worker-agent
  template:
    metadata:
      labels:
        app: checkmk-worker-agent
        name: checkmk-worker-agent
    spec:
      automountServiceAccountToken: false
      containers:
      - image: lisapichlertribe29/worker_agent:0.4
        imagePullPolicy: Always
        name: checkmk-worker-agent
        env:
        command: ["/bin/ash"]
        args: ["/app_client/runscript.sh", "--secure-protocol"]
#        args: ["/app_client/runscript.sh"]
        resources:
          limits:
            cpu: 300m
            memory: 2000Mi
          requests:
            cpu: 150m
            memory: 200Mi
        volumeMounts:
        - mountPath: /rootfs
          name: rootfs
          readOnly: true
        - mountPath: /var/run
          name: var-run
          readOnly: true
        - mountPath: /sys
          name: sys
          readOnly: true
        - mountPath: /var/lib/docker
          name: docker
          readOnly: true
        - mountPath: /dev/disk
          name: disk
          readOnly: true
      initContainers:
      - image: wontektribe29/worker-init:0.5
        imagePullPolicy: Always
        name: checkmk-worker-init-container
        env:
        command: ["/bin/bash"]
        args: ["/init_container/runscript.sh", "--secure-protocol"]
#        args: ["/init_container/runscript.sh"] # for http protocol
      serviceAccountName: cadvisor
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /
        name: rootfs
      - hostPath:
          path: /var/run
        name: var-run
      - hostPath:
          path: /sys
        name: sys
      - hostPath:
          path: /var/lib/docker
        name: docker
      - hostPath:
          path: /dev/disk
        name: disk
